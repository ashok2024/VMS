@model VMS.Models.Visitor.VisitorEntryModel
@{
    ViewBag.Title = "AddVisitor";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Google Font: Source Sans Pro -->
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
<!-- Font Awesome -->
<link rel="stylesheet" href="../plugins/fontawesome-free/css/all.min.css">
<!-- daterange picker -->
<link rel="stylesheet" href="../plugins/daterangepicker/daterangepicker.css">
<!-- iCheck for checkboxes and radio inputs -->
<link rel="stylesheet" href="../plugins/icheck-bootstrap/icheck-bootstrap.min.css">
<!-- Bootstrap Color Picker -->
<link rel="stylesheet" href="../plugins/bootstrap-colorpicker/css/bootstrap-colorpicker.min.css">
<!-- Tempusdominus Bootstrap 4 -->
<link rel="stylesheet" href="../plugins/tempusdominus-bootstrap-4/css/tempusdominus-bootstrap-4.min.css">
<!-- Select2 -->
<link rel="stylesheet" href="../plugins/select2/css/select2.min.css">
<link rel="stylesheet" href="../plugins/select2-bootstrap4-theme/select2-bootstrap4.min.css">
<!-- Bootstrap4 Duallistbox -->
<link rel="stylesheet" href="../plugins/bootstrap4-duallistbox/bootstrap-duallistbox.min.css">
<!-- BS Stepper -->
<link rel="stylesheet" href="../plugins/bs-stepper/css/bs-stepper.min.css">
<!-- dropzonejs -->
<link rel="stylesheet" href="../plugins/dropzone/min/dropzone.min.css">
<!-- Theme style -->
<link rel="stylesheet" href="../dist/css/adminlte.min.css">

<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Visitory Entry Form</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active">Visitory Entry Form</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<section class="content">
    <div class="container-fluid">

        @using (Html.BeginForm("Save", "Visitor", new { userId = ViewBag.UserId, userName = ViewBag.userName }))
        {
            @Html.HiddenFor(m => m.Id)
            @Html.HiddenFor(m => m.VisitorId)
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <!-- left column -->
                <div class="col-md-6">
                    <!-- general form elements -->
                    <div class="card card-primary">
                        <!-- /.card-header -->
                        <!-- form start -->
                        <div class="card-body">
                            <div class="form-group">
                                <label>Employee</label>
                                @Html.DropDownList("EmployeeId", ViewBag.EmpList as SelectList, "Select Employee", new { @class = "form-control controlSize" })
                                @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label>Department</label>
                                @*<input type="text" class="form-control" id="Department" >*@
                                @Html.TextBoxFor(m => m.Department, new { @class = "form-control controlSize", autocomplete = "off", placeholder = "Department", disabled = "disabled" })
                            </div>
                            <div class="form-group">
                                <label>Designation</label>
                                @*<input type="text" class="form-control controlSize" id="Designation" placeholder="Designation" disabled="disabled">*@
                                @Html.TextBoxFor(m => m.Designation, new { @class = "form-control controlSize", autocomplete = "off", placeholder = "Designation", disabled = "disabled" })
                            </div>
                            <div class="form-group">
                                <label>Visitor Contact</label>
                                @Html.TextBoxFor(m => m.Contact, new { maxlength = 10, @class = "form-control controlSize", autocomplete = "off", placeholder = "Visitor Contact", onblur = "contactchange();" })
                                @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label>Visitor Name</label>
                                @Html.TextBoxFor(m => m.Name, new { maxlength = 50, @class = "form-control controlSize", autocomplete = "off", placeholder = "Name" })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label>Visitor Company</label>
                                @Html.TextBoxFor(m => m.Company, new { maxlength = 100, @class = "form-control controlSize", autocomplete = "off", placeholder = "Company Name" })
                                @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label>Visitor Email Id</label>
                                @Html.TextBoxFor(m => m.EmailId, new { maxlength = 50, @class = "form-control controlSize", autocomplete = "off", placeholder = "Email Id" })
                                @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label>Visitor Type</label>
                                @Html.DropDownList("VisitorType", ViewBag.VisitorTypeList as SelectList, "Select Visitor Type", new { @class = "form-control controlSize" })
                            </div>
                            <div class="form-group">
                                <label>Visitor Address</label>
                                @Html.TextBoxFor(m => m.Address, new { maxlength = 150, @class = "form-control controlSize", autocomplete = "off", placeholder = "Address" })
                            </div>
                            <div class="form-group">
                                <div class="bootstrap-timepicker">
                                    <div class="form-group">
                                        <label>In Time</label>
                                        <div class="input-group date controlSize" id="Intimepicker" data-target-input="nearest">
                                            @Html.TextBoxFor(m => m.InTime, new { @class = "form-control datetimepicker-input", @data_target = "#Intimepicker" })
                                            <div class="input-group-append" data-target="#Intimepicker" data-toggle="datetimepicker">
                                                <div class="input-group-text"><i class="far fa-clock"></i></div>
                                            </div>
                                        </div>
                                        <!-- /.input group -->
                                    </div>
                                    <!-- /.form group -->
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="bootstrap-timepicker">
                                    <div class="form-group">
                                        <label>Out Time</label>
                                        <div class="input-group date controlSize" id="Outtimepicker" data-target-input="nearest">
                                            @*<input type="text" class="form-control datetimepicker-input" data-target="#timepicker" />*@
                                            @Html.TextBoxFor(m => m.OutTime, new { @class = "form-control datetimepicker-input", @data_target = "#Outtimepicker" })
                                            <div class="input-group-append" data-target="#Outtimepicker" data-toggle="datetimepicker">
                                                <div class="input-group-text"><i class="far fa-clock"></i></div>
                                            </div>
                                        </div>
                                        <!-- /.input group -->
                                    </div>
                                    <!-- /.form group -->
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Visit Date From</label>
                                <div class="input-group date controlSize" id="datefrom" data-target-input="nearest">
                                    @*<input type="text" class="form-control datetimepicker-input" data-target="#reservationdate" />*@
                                    @Html.TextBoxFor(m => m.VisitDateFrom, new { @class = "form-control datetimepicker-input", @data_target = "#datefrom" })
                                    <div class="input-group-append" data-target="#datefrom" data-toggle="datetimepicker">
                                        <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.VisitDateFrom, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <label>Visit Date To</label>
                                <div class="input-group date controlSize" id="dateto" data-target-input="nearest">
                                    @*<input type="text" class="form-control datetimepicker-input" data-target="#reservationdate" />*@
                                    @Html.TextBoxFor(m => m.VisitDateTo, new { @class = "form-control datetimepicker-input", @data_target = "#dateto" })
                                    <div class="input-group-append" data-target="#dateto" data-toggle="datetimepicker">
                                        <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.VisitDateTo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <!-- /.card-body -->
                    </div>
                </div>
                <!--/.col (left) -->

                <div class="col-md-6">
                    <!-- general form elements -->
                    <div class="card card-primary">
                        <!-- /.card-header -->
                        <!-- form start -->
                        <div class="card-body">
                            <div class="form-group">
                                <label for="exampleInputFile">Photo</label>
                                <div class="input-group">
                                    <div class="col-2">
                                        <div class="custom-file">
                                            <input type="file" class="custom-file-input" id="Photo">
                                            <label class="custom-file-label" for="Photo">Choose file</label>
                                        </div>
                                    </div>
                                    <div class="col-5">
                                        <img id="imgPreview" height="125" width="230" src="~/Content/assets/img/image_placeholder.jpg" />
                                    </div>
                                </div>
                                @Html.HiddenFor(m => m.PhotoPath)
                                @Html.HiddenFor(m => m.PhotoPathCapture)
                                @Html.HiddenFor(m => m.captureCertificate)
                            </div>

                            <div class="form-group">                               
                                <div class="col-12 col-sm-12 col-lg-12 col-xs-12 col-md-12" style="padding-top:50px">
                                    <div class="row">
                                        <div id="LiveCamera" style="margin-bottom:15px;"></div>
                                    </div>
                                    <div class="row">
                                        <div class="col-4 col-sm-12 col-lg-4 col-xs-12 col-md-4" style="margin-top:5px">
                                            <input type="button" class="btn btn-primary" value="Capture Snapshot" onClick="CaptureSnapshot()">
                                        </div>
                                        <div class="col-4 col-sm-12 col-lg-4 col-xs-12 col-md-4">
                                        </div>
                                        <div class="col-4 col-sm-12 col-lg-4 col-xs-12 col-md-4" style="margin-top:5px">
                                            <input type="button" class="btn btn-primary" value="Capture Certificate" onClick="CaptureSnapshotCovidCertificate()">
                                        </div>
                                    </div>
                                    <div class="row" style="margin-top:5px">
                                        <div class="col-4 col-sm-12 col-lg-4 col-xs-12 col-md-6">
                                            <div id="results">
                                                <img id="img" src="" style="width:200px" />
                                            </div>
                                        </div>
                                        <div class="col-3 col-sm-12 col-lg-3 col-xs-12 col-md-3">
                                        </div>
                                        <div class="col-4 col-sm-12 col-lg-4 col-xs-12 col-md-4">
                                            <div id="resultsCertificate">
                                                <img id="img1" src="" style="width:200px" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            @*<div class="form-group">
                                    <div class="col-md-6" style="padding-top:50px;">
                                        <div class="panel panel-default">
                                            <div class="panel-heading">Live Web Camera</div>
                                            <div class="panel-body">
                                                <div id="LiveCamera" style="margin-bottom:15px;"></div>
                                                <form>
                                                    <div class="row">
                                                        <div class="col-4">
                                                            <input type="button" class="btn btn-primary" value="Capture Snapshot" onClick="CaptureSnapshot()">
                                                        </div>
                                                        <div class="col-4">

                                                        </div>
                                                        <div class="col-4">
                                                            <input type="button" class="btn btn-primary" value="Capture Certificate" onClick="CaptureSnapshotCovidCertificate()">
                                                        </div>

                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3" style="padding-top:15px;">
                                        <div class="panel panel-default">
                                            <div class="panel-heading">Captured Image</div>
                                            <div class="panel-body">
                                                <div id="results" style="width:100px;height:100px">
                                                    Your snapshot will appear here...
                                                    <img id="img" src="" style="width:200px"/>
                                                </div>
                                            </div>
                                            <br />
                                            <br />
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-6" style="padding-top:15px;">
                                        <div class="panel panel-default">
                                            <div class="panel-heading">Captured Snapshot/ Certificate</div>
                                            <div class="panel-body">
                                                <div id="resultsCertificate">Your Certificate will appear here...
                                                   <img id="img1" src="" style="width:200px"/>
                                                </div>
                                            </div>
                                            <br />
                                            <br />
                                        </div>
                                    </div>
                                </div>*@

                            <div class="form-group">
                                <label>Device</label>
                                @Html.DropDownList("DeviceId", ViewBag.DeviceList as SelectList, "Select Device", new { @class = "form-control controlSize" })
                                @Html.ValidationMessageFor(model => model.DeviceId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <label>Card Number</label>
                                @Html.TextBoxFor(m => m.CardNo, new { maxlength = 50, @class = "form-control controlSize", autocomplete = "off", placeholder = "Card Number" })
                                @Html.ValidationMessageFor(model => model.CardNo, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <label>Id Proof</label>
                                @Html.DropDownList("IdProof", ViewBag.IdProofList as SelectList, "Select Id Proof", new { @class = "form-control controlSize" })
                                @Html.ValidationMessageFor(model => model.IdProof, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label>Id Proof Number</label>
                                @Html.TextBoxFor(m => m.IdProofNo, new { maxlength = 15, @class = "form-control controlSize", autocomplete = "off", placeholder = "Id Proof Number" })
                                @Html.ValidationMessageFor(model => model.IdProofNo, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label>Vehicle Type</label>
                                @Html.DropDownList("VehicleType", ViewBag.VehicleTypeList as SelectList, "Select VehicleType", new { @class = "form-control controlSize" })
                            </div>
                            <div class="form-group">
                                <label>Vehicle Number</label>
                                @Html.TextBoxFor(m => m.VehicleNo, new { maxlength = 50, @class = "form-control controlSize", autocomplete = "off", placeholder = "Vehicle Number" })
                            </div>
                            <div class="form-group">
                                <label>Vehicle PUC Number</label>
                                @Html.TextBoxFor(m => m.VehiclePUCNo, new { maxlength = 50, @class = "form-control controlSize", autocomplete = "off", placeholder = "Vehicle PUC No." })
                            </div>
                            <div class="form-group">
                                <label>PUC End Date</label>
                                <div class="input-group date controlSize" id="enddate" data-target-input="nearest">
                                    @*<input type="text" class="form-control controlSize datetimepicker-input" data-target="#reservationdate" />*@
                                    @Html.TextBoxFor(m => m.PUCEndDate, new { @class = "form-control datetimepicker-input", @data_target = "#enddate" })
                                    <div class="input-group-append" data-target="#enddate" data-toggle="datetimepicker">
                                        <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Add Purpose</label>
                                @Html.TextBoxFor(m => m.Purpose, new { maxlength = 200, @class = "form-control controlSize", autocomplete = "off", placeholder = "Purpose" })
                                @Html.ValidationMessageFor(model => model.Purpose, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label>Material</label>
                                @Html.DropDownList("Material", ViewBag.MaterialList as SelectList, "Select Material", new { @class = "form-control controlSize" })
                            </div>
                            <div class="form-group">
                                <label>Remarks</label>
                                @Html.TextBoxFor(m => m.Remark, new { maxlength = 200, @class = "form-control controlSize", autocomplete = "off", placeholder = "Remark" })
                            </div>
                            <div class="form-group">
                                <label>Priority</label>
                                @Html.DropDownList("Priority", ViewBag.PriorityList as SelectList, "Select Priority", new { @class = "form-control controlSize" })
                            </div>
                            <div class="form-group">
                                <button type="submit" class="btn btn-primary">Submit</button>
                                <button type="button" class="btn btn-danger cancel" style="margin-left:40%;">Cancel</button>
                            </div>
                        </div>
                        <!-- /.card-body -->


                    </div>
                </div>
            </div>
        }

    </div><!-- /.container-fluid -->
</section>

@section scripts
{

    <!-- jQuery -->
    <script src="../plugins/jquery/jquery.min.js"></script>
    <!-- Bootstrap 4 -->
    <script src="../plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- Select2 -->
    <script src="../plugins/select2/js/select2.full.min.js"></script>
    <!-- Bootstrap4 Duallistbox -->
    <script src="../plugins/bootstrap4-duallistbox/jquery.bootstrap-duallistbox.min.js"></script>
    <!-- InputMask -->
    <script src="../plugins/moment/moment.min.js"></script>
    <script src="../plugins/inputmask/jquery.inputmask.min.js"></script>
    <!-- date-range-picker -->
    <script src="../plugins/daterangepicker/daterangepicker.js"></script>
    <!-- bootstrap color picker -->
    <script src="../plugins/bootstrap-colorpicker/js/bootstrap-colorpicker.min.js"></script>
    <!-- Bootstrap Switch -->
    <script src="../plugins/bootstrap-switch/js/bootstrap-switch.min.js"></script>
    <!-- BS-Stepper -->
    <script src="../plugins/bs-stepper/js/bs-stepper.min.js"></script>
    <!-- dropzonejs -->
    <script src="../plugins/dropzone/min/dropzone.min.js"></script>
    <!-- AdminLTE App -->
    <script src="../dist/js/adminlte.min.js"></script>
    <!-- AdminLTE for demo purposes -->
    <script src="../dist/js/demo.js"></script>
    <!-- Page specific script -->

    <script src="~/Scripts/webcamjs/webcam.js"></script>
    <!-- Configure web cam settings -->
    <script language="JavaScript">
        Webcam.set({
            width: 474,
            height: 375,
            image_format: 'png',
            jpeg_quality: 100
        });
        Webcam.attach('#LiveCamera');
    </script>

    <script language="JavaScript">
        function test() {
            alert("call");
        }
        function CaptureSnapshot() {
            Webcam.snap(function (data) {
                // display results in page
                //    document.getElementById('results').innerHTML = '<img style="width:200px" src="' + data + '"/>';
                // Send image data to the controller to store locally or in database

                $("#img").attr('src', data);
                debugger;
                $.ajax({
                    type: "POST",
                    url: "/Visitor/UploadCaptureFile",
                    data: '{data:"' + data + '"}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        $("#PhotoPathCapture").val('/Uploads/Photos/' + response);
                    },
                    error: function (er) {
                        alert(er);
                    }
                });

                Webcam.upload(data,
                    '/WebCam/CaptureImage',
                    function (code, text) {
                        // alert('Snapshot/Image captured successfully...');


                    });


            });


        }
        function CaptureSnapshotCovidCertificate() {
            Webcam.snap(function (data) {
                // display results in page
                //document.getElementById('resultsCertificate').innerHTML = '<img style="width:200px" src="' + data + '"/>';
                // Send image data to the controller to store locally or in database
                $("#img1").attr('src', data);
                debugger;
                $.ajax({
                    type: "POST",
                    url: "/Visitor/UploadCaptureCertificate",
                    data: '{data:"' + data + '"}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        $("#captureCertificate").val('/Uploads/Certificate/' + response);
                    },
                    error: function (er) {
                        // alert(er);
                    }
                });

                Webcam.upload(data,
                    '/WebCam/CaptureImage',
                    function (code, text) {
                        //alert('Snapshot/Image captured successfully...');


                    });


            });


        }
    </script>

    <script>


        $(function () {

            debugger;

            $("#imgPreview").css("display", "none");
            var Id = $("#Id").val();
            var ImagePath = $("#WebUIUrl").val() + $("#PhotoPath").val();

            if (Id > 0) {
                $("#imgPreview").attr('src', ImagePath);
                var img = $("#WebUIUrl").val() + $("#PhotoPathCapture").val();
                var img1 = $("#WebUIUrl").val() + $("#captureCertificate").val();
                $("#img").attr('src', img);
                $("#img1").attr('src', img1);
            }

            //Timepicker
            $('#timepicker').datetimepicker({
                format: 'LT'
            })
            $('#Intimepicker').datetimepicker({
                format: 'LT'
            })
            $('#Outtimepicker').datetimepicker({
                format: 'LT'
            })

            //Date picker
            $('#reservationdate').datetimepicker({
                format: 'L'
            });

            $('#datefrom').datetimepicker({
                format: 'L'
            });

            $('#dateto').datetimepicker({
                format: 'L'
            });

            $('#enddate').datetimepicker({
                format: 'L'
            });

             $("#EmployeeId").change(function () {
                debugger;
                 var id = $("#EmployeeId").val();
                    $.ajax({
                        cache: false,
                        type: "GET",
                        url: '@Url.Action("GetEmployeeData", "Visitor")',
                        data: { "EmployeeId": id },
                        success: function (json, textStatus) {
                            debugger;
                           // $("#EmpCompany").val(json.Company);
                            $("#Department").val(json.Department);
                            $('#Designation').val(json.Designation);
                        },
                        error: function () {
                            alert("Data Not Found");
                        }
                    });
            });

            $(document).on('click', '.cancel', function () {

                debugger;

                var url = $("#WebUIUrl").val() + "/Visitor/GetVisitorList?userId=@ViewBag.UserId&userName=@ViewBag.UserName";
                return window.location.href = url;
            });

            $(document).on('change', '#Photo', function () {

                debugger;

                var data = new FormData();
                var files = $("#Photo").get(0).files;
                if (files.length > 0) {
                    data.append("MyImages", files[0]);
                }

                $.ajax({
                    url: $("#WebUIUrl").val() + "/Visitor/UploadFile",
                    type: "POST",
                    processData: false,
                    contentType: false,
                    data: data,
                    success: function (response) {
                        //code after success
                        debugger;
                       // $("#ImageName").val(response);
                        $("#imgPreview").css("display", "block");
                        $("#PhotoPath").val('/Uploads/' + response);
                        $("#imgPreview").attr('src', '/Uploads/' + response);
                    },
                    error: function (er) {
                        alert(er);
                    }

                });


            });
        })

        function contactchange() {
            alert();
                var Contact = $("#Contact").val();

                if (Contact != "") {

                 $.ajax({
                        cache: false,
                        type: "GET",
                        url: '@Url.Action("GetVisitorData", "Visitor")',
                        data: { "Contact": Contact },
                     success: function (json, textStatus) {
                            convertDatetime(json.FromDate, json.ToDate, json.PUCEndDate);
                            json = json || {};
                            $("#Name").val(json.Name);
                            $("#Company").val(json.Company);
                            $('#EmailId').val(json.EmailId);
                            $('#VisitorType').val(json.VisitorType);
                            $('#Address').val(json.Address);
                            $('#InTime').val(json.InTime);
                            $('#OutTime').val(json.OutTime);
                            //$('#VisitDateFrom').val(json.FromDate)
                            //$('#VisitDateTo').val(json.ToDate);
                            $('#DeviceId').val(json.DeviceId);
                            $('#CardNo').val(json.CardNo);
                            $('#IdProof').val(json.IdProof);
                            $('#IdProofNo').val(json.IdProofNumber);
                            $('#VehicleNo').val(json.VehicleNo);
                            $('#VehicleType').val(json.VehicleType);
                            $('#VehiclePUCNo').val(json.VehiclePUCNo);
                           /* $('#PUCEndDate').val(json.PUCEndDate);*/
                            $('#Purpose').val(json.Purpose);
                            $('#Material').val(json.Material);
                            $('#Remark').val(json.Remark);
                         $('#Priority').val(json.Priority);
                         var img = $("#WebUIUrl").val() + json.Photo;
                        // document.getElementById('results').innerHTML = '<img style="width:200px" id="img" />';
                         $("#img").attr('src', img);

                         var img = $("#WebUIUrl").val() + json.CertificateImagePath;
                         //document.getElementById('resultsCertificate').innerHTML = '<img style="width:200px" id="img1" />';
                         $("#img1").attr('src', img);

                        },
                        error: function () {
                            alert("Data Not Found");
                        }
                        });
                    }
        }

        function convertDatetime(date1 , d2 ,d3) {
            var date = new Date(parseInt(date1.substr(6)));
            var month = ("0" + (date.getMonth() + 1)).slice(-2);
            //var formdate = ("0" + date.getDate()).slice(-2) + '-' + month + '-' + date.getFullYear();
            var formdate = month + '/' + ("0" + date.getDate()).slice(-2) + '/' + date.getFullYear();
            $('#VisitDateFrom').val(formdate);

            var date1 = new Date(parseInt(d2.substr(6)));
            var month1 = ("0" + (date1.getMonth() + 1)).slice(-2);
            /*var toDate = ("0" + date1.getDate()).slice(-2) + '-' + month1 + '-' + date1.getFullYear();*/
            var toDate = month1 + '/' + ("0" + date1.getDate()).slice(-2) + '/' + date1.getFullYear();
            $('#VisitDateTo').val(toDate)

            var date2 = new Date(parseInt(d3.substr(6)));
            var month2 = ("0" + (date2.getMonth() + 1)).slice(-2);
            /*var pucdate = ("0" + date2.getDate()).slice(-2) + '-' + month2 + '-' + date2.getFullYear();*/
            var pucdate = + month2 + '/' +  ("0" + date2.getDate()).slice(-2) + '/' + date2.getFullYear();
            $('#PUCEndDate').val(pucdate);
        }
    </script>
}

