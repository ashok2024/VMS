@model VMS.Models.Visitor.VisitorEntryModel
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>VMS | Register</title>

    <!-- Google Font: Source Sans Pro -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="../plugins/fontawesome-free/css/all.min.css">
    <!-- Ionicons -->
    <link rel="stylesheet" href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css">
    <!-- Tempusdominus Bootstrap 4 -->
    <link rel="stylesheet" href="../plugins/tempusdominus-bootstrap-4/css/tempusdominus-bootstrap-4.min.css">
    <!-- iCheck -->
    <link rel="stylesheet" href="../plugins/icheck-bootstrap/icheck-bootstrap.min.css">
    <!-- JQVMap -->
    <link rel="stylesheet" href="../plugins/jqvmap/jqvmap.min.css">
    <!-- IonIcons -->
    <link rel="stylesheet" href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css">
    <!-- Theme style -->
    <link rel="stylesheet" href="../dist/css/adminlte.min.css">
    <!-- overlayScrollbars -->
    <link rel="stylesheet" href="../plugins/overlayScrollbars/css/OverlayScrollbars.min.css">
    <!-- Daterange picker -->
    <link rel="stylesheet" href="../plugins/daterangepicker/daterangepicker.css">
    <!-- summernote -->
    <link rel="stylesheet" href="../plugins/summernote/summernote-bs4.min.css">


    <!-- daterange picker -->
    <link rel="stylesheet" href="../plugins/daterangepicker/daterangepicker.css">
    <!-- Bootstrap Color Picker -->
    <link rel="stylesheet" href="../plugins/bootstrap-colorpicker/css/bootstrap-colorpicker.min.css">
    <!-- Tempusdominus Bootstrap 4 -->
    <link rel="stylesheet" href="../plugins/tempusdominus-bootstrap-4/css/tempusdominus-bootstrap-4.min.css">
    <!-- Select2 -->
    <link rel="stylesheet" href="../plugins/select2/css/select2.min.css">
    <link rel="stylesheet" href="../plugins/select2-bootstrap4-theme/select2-bootstrap4.min.css">
    <!-- Bootstrap4 Duallistbox -->
    <link rel="stylesheet" href="../plugins/bootstrap4-duallistbox/bootstrap-duallistbox.min.css">
    <!-- BS Stepper -->
    <link rel="stylesheet" href="../plugins/bs-stepper/css/bs-stepper.min.css">
    <!-- dropzonejs -->
    <link rel="stylesheet" href="../plugins/dropzone/min/dropzone.min.css">


</head>
<body>
    <div class="wrapper">
        <section class="content">
            <div class="container-fluid">

                @using (Html.BeginForm("Register", "Visitor", new { userId = ViewBag.UserId, userName = ViewBag.userName }))
                {
                    @Html.HiddenFor(m => m.Id)
                    @Html.HiddenFor(m => m.VisitorId)
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row">
                        <!-- left column -->
                        <div class="col-md-6">
                            <!-- general form elements -->
                            <div class="card card-primary">
                                <!-- /.card-header -->
                                <!-- form start -->
                                <div class="card-body">
                                    <div class="form-group">
                                        <label>Employee</label>
                                        @Html.DropDownList("EmployeeId", ViewBag.EmpList as SelectList, "Select Employee", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        <label>Department</label>
                                        @*<input type="text" class="form-control" id="Department" >*@
                                        @Html.TextBoxFor(m => m.Department, new { @class = "form-control", autocomplete = "off", placeholder = "Department", disabled = "disabled" })
                                    </div>
                                    <div class="form-group">
                                        <label>Designation</label>
                                        @*<input type="text" class="form-control" id="Designation" placeholder="Designation" disabled="disabled">*@
                                        @Html.TextBoxFor(m => m.Designation, new { @class = "form-control", autocomplete = "off", placeholder = "Designation", disabled = "disabled" })
                                    </div>
                                    <div class="form-group">
                                        <label>Visitor Contact</label>
                                        @Html.TextBoxFor(m => m.Contact, new { maxlength = 10, @class = "form-control", autocomplete = "off", placeholder = "Visitor Contact", onblur = "contactchange();" })
                                        @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        <label>Visitor Name</label>
                                        @Html.TextBoxFor(m => m.Name, new { maxlength = 50, @class = "form-control", autocomplete = "off", placeholder = "Name" })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        <label>Visitor Company</label>
                                        @Html.TextBoxFor(m => m.Company, new { maxlength = 100, @class = "form-control", autocomplete = "off", placeholder = "Company Name" })
                                        @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        <label>Visitor Email Id</label>
                                        @Html.TextBoxFor(m => m.EmailId, new { maxlength = 50, @class = "form-control", autocomplete = "off", placeholder = "Email Id" })
                                        @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        <label>Visitor Type</label>
                                        @Html.DropDownList("VisitorType", ViewBag.VisitorTypeList as SelectList, "Select Visitor Type", new { @class = "form-control" })
                                    </div>
                                    <div class="form-group">
                                        <label>Visitor Address</label>
                                        @Html.TextBoxFor(m => m.Address, new { maxlength = 150, @class = "form-control", autocomplete = "off", placeholder = "Address" })
                                    </div>
                                    <div class="form-group">
                                        <div class="bootstrap-timepicker">
                                            <div class="form-group">
                                                <label>In Time</label>
                                                <div class="input-group date" id="Intimepicker" data-target-input="nearest">
                                                    @Html.TextBoxFor(m => m.InTime, new { @class = "form-control datetimepicker-input", @data_target = "#Intimepicker" })
                                                    <div class="input-group-append" data-target="#Intimepicker" data-toggle="datetimepicker">
                                                        <div class="input-group-text"><i class="far fa-clock"></i></div>
                                                    </div>
                                                </div>
                                                <!-- /.input group -->
                                            </div>
                                            <!-- /.form group -->
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="bootstrap-timepicker">
                                            <div class="form-group">
                                                <label>Out Time</label>
                                                <div class="input-group date" id="Outtimepicker" data-target-input="nearest">
                                                    @*<input type="text" class="form-control datetimepicker-input" data-target="#timepicker" />*@
                                                    @Html.TextBoxFor(m => m.OutTime, new { @class = "form-control datetimepicker-input", @data_target = "#Outtimepicker" })
                                                    <div class="input-group-append" data-target="#Outtimepicker" data-toggle="datetimepicker">
                                                        <div class="input-group-text"><i class="far fa-clock"></i></div>
                                                    </div>
                                                </div>
                                                <!-- /.input group -->
                                            </div>
                                            <!-- /.form group -->
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label>Visit Date From</label>
                                        <div class="input-group date" id="datefrom" data-target-input="nearest">
                                            @*<input type="text" class="form-control datetimepicker-input" data-target="#reservationdate" />*@
                                            @Html.TextBoxFor(m => m.VisitDateFrom, new { @class = "form-control datetimepicker-input", @data_target = "#datefrom" })
                                            <div class="input-group-append" data-target="#datefrom" data-toggle="datetimepicker">
                                                <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                            </div>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.VisitDateFrom, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="form-group">
                                        <label>Visit Date To</label>
                                        <div class="input-group date" id="dateto" data-target-input="nearest">
                                            @*<input type="text" class="form-control datetimepicker-input" data-target="#reservationdate" />*@
                                            @Html.TextBoxFor(m => m.VisitDateTo, new { @class = "form-control datetimepicker-input", @data_target = "#dateto" })
                                            <div class="input-group-append" data-target="#dateto" data-toggle="datetimepicker">
                                                <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                            </div>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.VisitDateTo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <!-- /.card-body -->
                            </div>
                        </div>
                        <!--/.col (left) -->

                        <div class="col-md-6">
                            <!-- general form elements -->
                            <div class="card card-primary">
                                <!-- /.card-header -->
                                <!-- form start -->
                                <div class="card-body">
                                    <div class="form-group">
                                        <label for="exampleInputFile">Photo</label>
                                        <div class="input-group">
                                            <div class="col-2">
                                                <div class="custom-file">
                                                    <input type="file" class="custom-file-input" id="Photo">
                                                    <label class="custom-file-label" for="Photo">Choose file</label>
                                                </div>
                                            </div>
                                            <div class="col-5">
                                                <img id="imgPreview" height="125" width="230" src="~/Content/assets/img/image_placeholder.jpg" />
                                            </div>
                                        </div>
                                        @Html.HiddenFor(m => m.PhotoPath)
                                    </div>

                                    <div class="form-group">
                                        <label>Id Proof</label>
                                        @Html.DropDownList("IdProof", ViewBag.IdProofList as SelectList, "Select Id Proof", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.IdProof, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        <label>Id Proof Number</label>
                                        @Html.TextBoxFor(m => m.IdProofNo, new { maxlength = 15, @class = "form-control", autocomplete = "off", placeholder = "Id Proof Number" })
                                        @Html.ValidationMessageFor(model => model.IdProofNo, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        <label>Vehicle Type</label>
                                        @Html.DropDownList("VehicleType", ViewBag.VehicleTypeList as SelectList, "Select VehicleType", new { @class = "form-control" })
                                    </div>
                                    <div class="form-group">
                                        <label>Vehicle Number</label>
                                        @Html.TextBoxFor(m => m.VehicleNo, new { maxlength = 50, @class = "form-control", autocomplete = "off", placeholder = "Vehicle Number" })
                                    </div>
                                    <div class="form-group">
                                        <label>Vehicle PUC Number</label>
                                        @Html.TextBoxFor(m => m.VehiclePUCNo, new { maxlength = 50, @class = "form-control", autocomplete = "off", placeholder = "Vehicle PUC No." })
                                    </div>
                                    <div class="form-group">
                                        <label>PUC End Date</label>
                                        <div class="input-group date" id="enddate" data-target-input="nearest">
                                            @*<input type="text" class="form-control datetimepicker-input" data-target="#reservationdate" />*@
                                            @Html.TextBoxFor(m => m.PUCEndDate, new { @class = "form-control datetimepicker-input", @data_target = "#enddate" })
                                            <div class="input-group-append" data-target="#enddate" data-toggle="datetimepicker">
                                                <div class="input-group-text"><i class="fa fa-calendar"></i></div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label>Add Purpose</label>
                                        @Html.TextBoxFor(m => m.Purpose, new { maxlength = 200, @class = "form-control", autocomplete = "off", placeholder = "Purpose" })
                                        @Html.ValidationMessageFor(model => model.Purpose, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        <label>Material</label>
                                        @Html.DropDownList("Material", ViewBag.MaterialList as SelectList, "Select Material", new { @class = "form-control" })
                                    </div>
                                    <div class="form-group">
                                        <label>Remarks</label>
                                        @Html.TextBoxFor(m => m.Remark, new { maxlength = 200, @class = "form-control", autocomplete = "off", placeholder = "Remark" })
                                    </div>
                                    <div class="form-group">
                                        <label>Priority</label>
                                        @Html.DropDownList("Priority", ViewBag.PriorityList as SelectList, "Select Priority", new { @class = "form-control" })
                                    </div>
                                </div>
                                <!-- /.card-body -->

                                <div class="card-footer">
                                    <button type="submit" class="btn btn-primary">Submit</button>
                                    @*<button type="button" class="btn btn-danger cancel">Cancel</button>*@
                                </div>
                            </div>
                        </div>
                    </div>
                }

            </div><!-- /.container-fluid -->
        </section>
    </div>
    <input value="@System.Configuration.ConfigurationManager.AppSettings["WebUIUrl"]" type="text" name="WebUIUrl" id="WebUIUrl" hidden="hidden" />
    <!-- ./wrapper -->
    <!-- jQuery -->
    <script src="../plugins/jquery/jquery.min.js"></script>
    <!-- Resolve conflict in jQuery UI tooltip with Bootstrap tooltip -->
    <!-- Select2 -->
    <script src="../plugins/select2/js/select2.full.min.js"></script>
    <!-- Bootstrap4 Duallistbox -->
    <script src="../plugins/bootstrap4-duallistbox/jquery.bootstrap-duallistbox.min.js"></script>
    <!-- InputMask -->
    <script src="../plugins/moment/moment.min.js"></script>
    <script src="../plugins/inputmask/jquery.inputmask.min.js"></script>
    <!-- bootstrap color picker -->
    <script src="../plugins/bootstrap-colorpicker/js/bootstrap-colorpicker.min.js"></script>
    <!-- Bootstrap Switch -->
    <script src="../plugins/bootstrap-switch/js/bootstrap-switch.min.js"></script>
    <!-- BS-Stepper -->
    <script src="../plugins/bs-stepper/js/bs-stepper.min.js"></script>
    <!-- dropzonejs -->
    <script src="../plugins/dropzone/min/dropzone.min.js"></script>
    <!-- Bootstrap 4 -->
    <script src="../plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- ChartJS -->
    <script src="../plugins/chart.js/Chart.min.js"></script>
    <!-- Sparkline -->
    <script src="../plugins/sparklines/sparkline.js"></script>
    <!-- JQVMap -->
    <script src="../plugins/jqvmap/jquery.vmap.min.js"></script>
    <script src="../plugins/jqvmap/maps/jquery.vmap.usa.js"></script>
    <!-- jQuery Knob Chart -->
    <script src="../plugins/jquery-knob/jquery.knob.min.js"></script>
    <!-- daterangepicker -->
    <script src="../plugins/moment/moment.min.js"></script>
    <script src="../plugins/daterangepicker/daterangepicker.js"></script>
    <!-- Tempusdominus Bootstrap 4 -->
    <script src="../plugins/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js"></script>
    <!-- Summernote -->
    <script src="../plugins/summernote/summernote-bs4.min.js"></script>
    <!-- overlayScrollbars -->
    <script src="../plugins/overlayScrollbars/js/jquery.overlayScrollbars.min.js"></script>
    <!-- AdminLTE App -->
    <script src="../dist/js/adminlte.js"></script>
    <!-- AdminLTE for demo purposes -->
    <script src="../dist/js/demo.js"></script>
    <!-- AdminLTE dashboard demo (This is only for demo purposes) -->
    <script src="../dist/js/pages/dashboard.js"></script>

    <script>
        $(function () {

            debugger;
            var Id = $("#Id").val();
            var ImagePath = $("#WebUIUrl").val() + $("#PhotoPath").val();

            if (Id > 0) {
                $("#imgPreview").attr('src', ImagePath);
            }

            //Timepicker
            $('#timepicker').datetimepicker({
                format: 'LT'
            })
            $('#Intimepicker').datetimepicker({
                format: 'LT'
            })
            $('#Outtimepicker').datetimepicker({
                format: 'LT'
            })

            //Date picker
            $('#reservationdate').datetimepicker({
                format: 'L'
            });

            $('#datefrom').datetimepicker({
                format: 'L'
            });

            $('#dateto').datetimepicker({
                format: 'L'
            });

            $('#enddate').datetimepicker({
                format: 'L'
            });

             $("#EmployeeId").change(function () {
                debugger;
                 var id = $("#EmployeeId").val();
                    $.ajax({
                        cache: false,
                        type: "GET",
                        url: '@Url.Action("GetEmployeeData", "Visitor")',
                        data: { "EmployeeId": id },
                        success: function (json, textStatus) {
                            debugger;
                           // $("#EmpCompany").val(json.Company);
                            $("#Department").val(json.Department);
                            $('#Designation').val(json.Designation);
                        },
                        error: function () {
                            alert("Data Not Found");
                        }
                    });
            });

            $(document).on('click', '.cancel', function () {

                debugger;

                var url = $("#WebUIUrl").val() + "/Visitor/GetVisitorList?userId=@ViewBag.UserId&userName=@ViewBag.UserName";
                return window.location.href = url;
            });

            $(document).on('change', '#Photo', function () {

                debugger;

                var data = new FormData();
                var files = $("#Photo").get(0).files;
                if (files.length > 0) {
                    data.append("MyImages", files[0]);
                }

                $.ajax({
                    url: $("#WebUIUrl").val() + "/Visitor/UploadFile",
                    type: "POST",
                    processData: false,
                    contentType: false,
                    data: data,
                    success: function (response) {
                        //code after success
                        debugger;
                       // $("#ImageName").val(response);
                        $("#PhotoPath").val('/Uploads/' + response);
                        $("#imgPreview").attr('src', '/Uploads/' + response);
                    },
                    error: function (er) {
                        alert(er);
                    }

                });
            });

            var message = '@ViewBag.Message';

            if (message == "saved") {

                alert("Request Send Successfully");

                var url = $("#WebUIUrl").val() + 'Visitor/VisitorRegister'

                return window.location.href = url;
            }
        })

        function contactchange() {

                var Contact = $("#Contact").val();

                if (Contact != "") {

                 $.ajax({
                        cache: false,
                        type: "GET",
                        url: '@Url.Action("GetVisitorData", "Visitor")',
                        data: { "Contact": Contact },
                        success: function (json, textStatus) {
                            debugger;
                            json = json || {};

                            if (json.length > 0) {
                                $("#Name").val(json.Name);
                                $("#Company").val(json.Company);
                                $('#EmailId').val(json.EmailId);
                            }
                        },
                        error: function () {
                            alert("Data Not Found");
                        }
                        });
                    }
                }
    </script>

</body>
</html>
