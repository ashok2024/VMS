@model VMS.Models.Admin.DeviceModel
@{
    ViewBag.Title = "AddDevice";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<!-- Google Font: Source Sans Pro -->
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700&display=fallback">
<!-- Font Awesome -->
<link rel="stylesheet" href="../plugins/fontawesome-free/css/all.min.css">
<!-- daterange picker -->
<link rel="stylesheet" href="../plugins/daterangepicker/daterangepicker.css">
<!-- iCheck for checkboxes and radio inputs -->
<link rel="stylesheet" href="../plugins/icheck-bootstrap/icheck-bootstrap.min.css">
<!-- Bootstrap Color Picker -->
<link rel="stylesheet" href="../plugins/bootstrap-colorpicker/css/bootstrap-colorpicker.min.css">
<!-- Tempusdominus Bootstrap 4 -->
<link rel="stylesheet" href="../plugins/tempusdominus-bootstrap-4/css/tempusdominus-bootstrap-4.min.css">
<!-- Select2 -->
<link rel="stylesheet" href="../plugins/select2/css/select2.min.css">
<link rel="stylesheet" href="../plugins/select2-bootstrap4-theme/select2-bootstrap4.min.css">
<!-- Bootstrap4 Duallistbox -->
<link rel="stylesheet" href="../plugins/bootstrap4-duallistbox/bootstrap-duallistbox.min.css">
<!-- BS Stepper -->
<link rel="stylesheet" href="../plugins/bs-stepper/css/bs-stepper.min.css">
<!-- dropzonejs -->
<link rel="stylesheet" href="../plugins/dropzone/min/dropzone.min.css">
<!-- Theme style -->
<link rel="stylesheet" href="../dist/css/adminlte.min.css">

<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Device Setting Form</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active">Device Setting Form</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<section class="content">
    <div class="container-fluid">

        @using (Html.BeginForm("SaveDevice", "Setting", new { userId = ViewBag.UserId, userName = ViewBag.userName }))
        {
            @Html.HiddenFor(m => m.DeviceId)
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <!-- left column -->
                <div class="col-md-6">
                    <!-- general form elements -->
                    <div class="card card-primary">
                        <!-- /.card-header -->
                        <!-- form start -->
                        <div class="card-body">
                            <div class="form-group">
                                <label>Device Name</label>
                                @*<input type="text" class="form-control" id="Department" >*@
                                @Html.TextBoxFor(m => m.DeviceName, new { maxlength = 50, @class = "form-control", autocomplete = "off", placeholder = "Enter Name" })
                                @Html.ValidationMessageFor(model => model.DeviceName, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label>Device Serial No</label>
                                @Html.TextBoxFor(m => m.DeviceSerialNo, new { maxlength = 50, @class = "form-control", autocomplete = "off", placeholder = "Enter Serial No From" })
                                @Html.ValidationMessageFor(model => model.DeviceSerialNo, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label>Device Account Id</label>
                                @Html.TextBoxFor(m => m.DeviceAccountId, new { maxlength = 50, @class = "form-control", autocomplete = "off", placeholder = "Enter Account Id" })
                                @Html.ValidationMessageFor(model => model.DeviceAccountId, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label>Device Location</label>
                                @Html.TextBoxFor(m => m.DeviceLocation, new { maxlength = 50, @class = "form-control", autocomplete = "off", placeholder = "Enter Location" })
                                @Html.ValidationMessageFor(model => model.DeviceLocation, "", new { @class = "text-danger" })
                            </div>

                        </div>
                        <!-- /.card-body -->
                    </div>
                </div>
                <!--/.col (left) -->

                <div class="col-md-6">
                    <!-- general form elements -->
                    <div class="card card-primary">
                        <!-- /.card-header -->
                        <!-- form start -->
                        <div class="card-body">
                            <div class="form-group">
                                <label>IP Address</label>
                                @Html.TextBoxFor(m => m.DeviceIPAddress, new { maxlength = 50, @class = "form-control", autocomplete = "off", placeholder = "Enter Ip Address" })
                                @Html.ValidationMessageFor(model => model.DeviceIPAddress, "", new { @class = "text-danger" })
                            </div>
                            @if (Model.DeviceId > 0)
                            {

                            }
                            else
                            {
                                <div class="form-group">
                                    <label>Port</label>
                                    @Html.TextBoxFor(m => m.Port, new { maxlength = 5, @class = "form-control", autocomplete = "off", placeholder = "Enter Port" })
                                    @Html.ValidationMessageFor(model => model.Port, "", new { @class = "text-danger" })
                                </div>
                            }

                            <div class="form-group">
                                <label>Mail UserName</label>
                                @*<input type="text" class="form-control" id="Department" >*@
                                @Html.TextBoxFor(m => m.UserName, new { maxlength = 50, @class = "form-control", autocomplete = "off", placeholder = "Enter User Name" })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>
                            @if (Model.DeviceId > 0)
                            {
                                @Html.HiddenFor(m=>m.Password)
                            }
                            else
                            {
                                <div class="form-group">
                                    <label>Mail Password</label>
                                    <div class="input-group mb-3">
                                        @Html.PasswordFor(m => m.Password, new { placeholder = "Password", @class = "form-control", @type = "password", @maxlength = "16", })
                                        <div class="input-group-append">
                                            <div class="input-group-text">
                                                <span toggle="#Password" class="fas fa-lock toggle-password"></span>
                                            </div>
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                </div>
                            }
                        </div>
                        <!-- /.card-body -->
                        <div class="card-footer">
                            <button type="submit" class="btn btn-primary">Submit</button>
                            <button type="button" class="btn btn-danger cancel">Cancel</button>
                        </div>
                    </div>
                </div>
            </div>
        }

    </div><!-- /.container-fluid -->
</section>

@section scripts
{

    <!-- jQuery -->
    <script src="../plugins/jquery/jquery.min.js"></script>
    <!-- Bootstrap 4 -->
    <script src="../plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- Select2 -->
    <script src="../plugins/select2/js/select2.full.min.js"></script>
    <!-- Bootstrap4 Duallistbox -->
    <script src="../plugins/bootstrap4-duallistbox/jquery.bootstrap-duallistbox.min.js"></script>
    <!-- InputMask -->
    <script src="../plugins/moment/moment.min.js"></script>
    <script src="../plugins/inputmask/jquery.inputmask.min.js"></script>
    <!-- date-range-picker -->
    <script src="../plugins/daterangepicker/daterangepicker.js"></script>
    <!-- bootstrap color picker -->
    <script src="../plugins/bootstrap-colorpicker/js/bootstrap-colorpicker.min.js"></script>
    <!-- Bootstrap Switch -->
    <script src="../plugins/bootstrap-switch/js/bootstrap-switch.min.js"></script>
    <!-- BS-Stepper -->
    <script src="../plugins/bs-stepper/js/bs-stepper.min.js"></script>
    <!-- dropzonejs -->
    <script src="../plugins/dropzone/min/dropzone.min.js"></script>
    <!-- AdminLTE App -->
    <script src="../dist/js/adminlte.min.js"></script>
    <!-- AdminLTE for demo purposes -->
    <script src="../dist/js/demo.js"></script>
    <!-- Page specific script -->
    <script>
        $(function () {

            $(".toggle-password").click(function () {
                debugger;
                $(this).toggleClass("fa-unlock");
                var input = $($(this).attr("toggle"));
                if (input.attr("type") == "password") {
                    input.attr("type", "text");
                } else {
                    input.attr("type", "password");
                }
            });


            $(document).on('click', '.cancel', function () {

                debugger;
                var url = $("#WebUIUrl").val() + "/Setting/GetDeviceList?userId=@ViewBag.UserId&userName=@ViewBag.UserName";
                return window.location.href = url;
            });

            var res = "@ViewBag.Result";
            if (res == "Success") {
                alert("Device Added");

                var url = $("#WebUIUrl").val() + "/Setting/GetDeviceList?userId=@ViewBag.UserId&userName=@ViewBag.UserName";
                return window.location.href = url;
            }
        })

    </script>
}





